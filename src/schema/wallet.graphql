# import User from './user.graphql'

# data

type WalletData {
  status: String!
  message: String!
  data: JSON
}

type InitiateTransactionData {
  status: String!
  transactionReference: String!
  amount: Float
  type: TransactionType
  description: String!
}

type Wallet {
  id: ID!
  amount: Float!
  #relationships
  user: User!
  wallet_transactions: [WalletTransaction!]!
}

type WalletTransaction {
  id: ID!
  amount: Float!
  type: TransactionType!
  description: String!
  #relationships
  wallet: Wallet!
}

enum TransactionType {
  Debit
  Credit
  Pending
}

type WalletTransactionData {
  amount: Float!
  transactionReference: String
  total: Float
  fee: Float
  type: TransactionType
  medium: PaymentMedium
  description: String
  mediumName: String
  mediumNumber: String
  status: String
  data: JSON
}

input WalletToWalletTransferInput {
  amount: Float!
  receiverPhone: String!
}

input WalletToBankTransferInput {
  amount: Float!
  accountNumber: String!
  bankCode: String!
}

input InitiateTransactionInput {
  amount: Float!
}

input FundWalletInput {
  transactionReference: String!
}
enum TransactionType {
  Credit
  Debit
  Pending
}

enum PaymentMedium {
  Easpay
  Card
  Bank
}
